name: Java CI/CD

on:
  push:
    branches: [ "main", "update" ]
  pull_request:
    branches: [ "main", "update" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checar o código do repositório
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Compilar projeto
        run: javac -d out $(find src -name "*.java")

      - name: Salvar artefatos compilados
        uses: actions/upload-artifact@v4
        with:
          name: arquivos-compilados
          path: out/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download compiled classes
        uses: actions/download-artifact@v4
        with:
          name: arquivos-compilados
          path: out/

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download JUnit standalone JAR
        run: |
          curl -L -o junit.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.9.3/junit-platform-console-standalone-1.9.3.jar

      - name: Compile test classes
        run: |
          mkdir -p test-out
          javac -d test-out -cp out:junit.jar test/*.java

      - name: Run tests
        run: |
          java -jar junit.jar -cp out:test-out --scan-class-path --include-classname=".*Test"

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Baixar artefatos compilados
        uses: actions/download-artifact@v4
        with:
          name: arquivos-compilados
          path: out/

      - name: Simular Deploy
        run: |
          echo "Iniciando deploy..."
          mkdir -p deploy
          cp -r out/* deploy/
          echo "Deploy realizado com sucesso!"